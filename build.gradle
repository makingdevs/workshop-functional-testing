import org.apache.tools.ant.taskdefs.condition.Os

buildscript {
  repositories {
    mavenCentral()
    jcenter()
  }
  dependencies {
    classpath "com.github.samueltbrown:gradle-cucumber-plugin:0.9"
  }
}

ext {
  groovyVersion = '2.4.5'
  gebVersion = '0.13.1'
  seleniumVersion = '2.52.0'
  cucumberJvmVersion = '1.2.2'
  chromeDriverVersion = '2.28'
  phantomJsVersion = '1.9.8'
}

apply plugin: 'groovy'
apply plugin: "com.github.samueltbrown.cucumber"
apply from: "osSpecificDownloads.gradle"

repositories {
  mavenCentral()
  jcenter()
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

dependencies {
  compile "org.codehaus.groovy:groovy-all:$groovyVersion"
  testCompile "info.cukes:cucumber-core:$cucumberJvmVersion"
  testCompile "info.cukes:cucumber-groovy:$cucumberJvmVersion"
  testCompile "info.cukes:cucumber-junit:$cucumberJvmVersion"
  testCompile "org.gebish:geb-core:$gebVersion"
  testCompile "org.seleniumhq.selenium:selenium-htmlunit-driver:$seleniumVersion"
  testCompile "org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion"
  testCompile "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"
  testCompile "org.seleniumhq.selenium:selenium-support:$seleniumVersion"
  testCompile("com.codeborne:phantomjsdriver:1.2.1") {
    // phantomjs driver pulls in a different selenium version
    transitive = false
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = '2.9'
}


cucumber {
  def tagsToRun = System.getProperty("cucumber.tags")
  formats = ['pretty','json:build/cucumber.json','junit:build/cucumber.xml','html:build/reports/cucumber']
  tags = tagsToRun ? [tagsToRun] : []
}

tasks.cucumber {
  dependsOn unzipChromeDriver, unzipPhantomJs

  def chromeDriverFilename = Os.isFamily(Os.FAMILY_WINDOWS) ? "chromedriver.exe" : "chromedriver"
  def phantomJsFilename = Os.isFamily(Os.FAMILY_WINDOWS) ? "phantomjs.exe" : "bin/phantomjs"

  def properties = [
    "webdriver.chrome.driver": new File(unzipChromeDriver.outputs.files.singleFile, chromeDriverFilename).absolutePath,
    "phantomjs.binary.path": new File(unzipPhantomJs.outputs.files.singleFile, phantomJsFilename).absolutePath,
    //"geb.cucumber.step.packages": "pages",
    "geb.env": System.getProperty("geb.env")
  ]

  if(System.getProperty("geb.saucelabs.file"))
    properties."geb.saucelabs.browser" = new File(System.getProperty("geb.saucelabs.file"))?.text

  jvmOptions.systemProperties(properties)
}
